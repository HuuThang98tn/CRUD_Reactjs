[{"C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\index.js":"1","C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\App.js":"2","C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\reportWebVitals.js":"3","C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\Screen\\Employee.js":"4","C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\Screen\\ScreenLogin.js":"5","C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\components\\AdvancedPagination.js":"6"},{"size":565,"mtime":1672904322655,"results":"7","hashOfConfig":"8"},{"size":462,"mtime":1673334833922,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1672904322655,"results":"10","hashOfConfig":"8"},{"size":35539,"mtime":1673337441880,"results":"11","hashOfConfig":"8"},{"size":3153,"mtime":1673334280802,"results":"12","hashOfConfig":"8"},{"size":960,"mtime":1673334958434,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"atusfb",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\index.js",[],[],"C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\App.js",[],[],"C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\reportWebVitals.js",[],[],"C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\Screen\\Employee.js",["35","36","37","38","39","40","41","42","43","44","45"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Modal, ModalTitle, InputGroup } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n// import AdvancedPagination from '../components/AdvancedPagination';\r\n// import { Datas } from '../FakeData';\r\nimport Form from 'react-bootstrap/Form';\r\nimport * as XLSX from 'xlsx'\r\nimport AdvancedPagination from '../components/AdvancedPagination';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst Employee = () => {\r\n    const [Data, setData] = useState([]);\r\n    const [RowData, SetRowData] = useState([])\r\n    const [ViewShow, SetViewShow] = useState(false)\r\n    const handleViewShow = () => { SetViewShow(true) }\r\n    const hanldeViewClose = () => { SetViewShow(false) }\r\n    //FOr Edit Model\r\n    const [ViewEdit, SetEditShow] = useState(false)\r\n    const handleEditShow = () => { SetEditShow(true) }\r\n    const hanldeEditClose = () => { SetEditShow(false) }\r\n    //FOr Delete Model\r\n    const [ViewDelete, SetDeleteShow] = useState(false)\r\n    const handleDeleteShow = () => { SetDeleteShow(true) }\r\n    const hanldeDeleteClose = () => { SetDeleteShow(false) }\r\n    //FOr Add New Data Model\r\n    const [ViewPost, SetPostShow] = useState(false)\r\n    const handlePostShow = () => { SetPostShow(true) }\r\n    const hanldePostClose = () => { SetPostShow(false) }\r\n\r\n    //Define here local state that store the form Data\r\n\r\n    const [bang, setBang] = useState(\"\")\r\n    const [zip, setZip] = useState(\"\")\r\n    const [gmail, setGmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [info, setInfo] = useState(\"\")\r\n    const [note, setNote] = useState(\"\")\r\n    const [status, setStatus] = useState(\"\")\r\n    const [valueStatus, setValustatus] = useState(null);\r\n    const [bangSearch, setBangSearch] = useState(\"\")\r\n    const [gmailSearch, setGmailSearch] = useState(\"\")\r\n\r\n    const [Delete, setDelete] = useState(false)\r\n    //Id for update record and Delete\r\n    const [id, setId] = useState(\"\");\r\n\r\n    // on change states\r\n    const [excelFile, setExcelFile] = useState(null);\r\n    const [excelFileError, setExcelFileError] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage, setPostsPerPage] = useState(30);\r\n    // submit\r\n    const [excelData, setExcelData] = useState([]);\r\n    const [authenticated, setauthenticated] = useState(localStorage.getItem(\"authenticated\"));\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = Data.slice(indexOfFirstPost, indexOfLastPost);\r\n    const URLS = \"http://localhost:3000/api-v1/todos\"\r\n\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem(\"authenticated\");\r\n        if (loggedInUser) {\r\n            setauthenticated(loggedInUser);\r\n            // console.log(\"-----------------\", loggedInUser);\r\n        }\r\n    }, []);\r\n\r\n    const GetEmployeeData = () => {\r\n        var config = {\r\n            method: 'get',\r\n            url: `${URLS}/get-list`,\r\n            headers: { 'token': `Bearer ${authenticated}` }\r\n        };\r\n        axios(config)\r\n            .then(function (response) {\r\n                setData(response.data.results)\r\n                // setPostsPerPage(response.data.results)\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error);\r\n                alert(error)\r\n\r\n            });\r\n    }\r\n    const handleSubmite = () => {\r\n        var data = JSON.stringify({\r\n            \"bang\": bang,\r\n            \"zip\": zip,\r\n            \"gmail\": gmail,\r\n            \"password\": password,\r\n            \"info\": info,\r\n            \"note\": note,\r\n            \"status\": status\r\n        });\r\n        var config = {\r\n            method: 'post',\r\n            url: `${URLS}/create`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'token': `Bearer ${authenticated}`\r\n            },\r\n            data: data\r\n        };\r\n        axios(config)\r\n            .then(function (response) {\r\n                window.location.reload()\r\n            })\r\n            .catch(function (error) {\r\n                alert(error)\r\n            });\r\n    }\r\n    const handleEdit = () => {\r\n\r\n        var data = JSON.stringify({\r\n            \"_id\": id,\r\n            \"bang\": bang,\r\n            \"zip\": zip,\r\n            \"gmail\": gmail,\r\n            \"password\": password,\r\n            \"info\": info,\r\n            \"note\": note,\r\n            \"status\": status\r\n        });\r\n        var config = {\r\n            method: 'post',\r\n            url: `${URLS}}/update-byId`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'token': `Bearer ${authenticated}`\r\n            },\r\n            data: data\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                // console.log(JSON.stringify(response.data));\r\n                window.location.reload()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                // alert(error)\r\n            });\r\n\r\n    }\r\n    //handle Delete Function \r\n    const handleDelete = () => {\r\n        var data = JSON.stringify({\r\n            idData: id\r\n        });\r\n        var config = {\r\n            method: 'post',\r\n            url: `${URLS}/delete-byId`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'token': `Bearer ${authenticated}`\r\n            },\r\n            data: data\r\n        };\r\n        axios(config)\r\n            .then(function (response) {\r\n                console.log(JSON.stringify(response.data));\r\n                // window.location.reload()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                // alert(error)\r\n            });\r\n    }\r\n    //call this function in useEffect\r\n    useEffect(() => {\r\n        GetEmployeeData();\r\n    }, [])\r\n\r\n    const searchView = () => {\r\n\r\n        if (bangSearch.length > 0) {\r\n            var data = JSON.stringify({\r\n                \"bang\": bangSearch\r\n            });\r\n            var config = {\r\n                method: 'post',\r\n                url: 'http://localhost:3000/api-v1/search/bang',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': `Bearer ${authenticated}`\r\n                },\r\n                data: data\r\n            };\r\n\r\n            axios(config)\r\n                .then(function (response) {\r\n                    setData(response.data.results)\r\n                    setBangSearch(\"\")\r\n                })\r\n                .catch(function (error) {\r\n                    alert(error);\r\n                });\r\n        } else {\r\n            setBangSearch(\"\")\r\n            // window.location.reload()\r\n\r\n        }\r\n    }\r\n\r\n    const searchViewGmail = () => {\r\n        if (gmailSearch.length > 0) {\r\n            var data = JSON.stringify({\r\n                \"gmail\": gmailSearch\r\n            });\r\n            var config = {\r\n                method: 'post',\r\n                url: 'http://localhost:3000/api-v1/search/req-gmail',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': `Bearer ${authenticated}`\r\n                },\r\n                data: data\r\n            };\r\n\r\n            axios(config)\r\n                .then(function (response) {\r\n                    setData(response.data.results)\r\n                    setGmailSearch(\"\")\r\n                })\r\n                .catch(function (error) {\r\n                    alert(error);\r\n                });\r\n        } else {\r\n            setGmailSearch(\"\")\r\n            // window.location.reload()\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleSearchStatus = (e) => {\r\n        // console.log(e.target.value);\r\n        setValustatus(e.target.value);\r\n        var data = JSON.stringify({\r\n            \"status\": e.target.value\r\n        });\r\n        var config = {\r\n            method: 'post',\r\n            url: 'http://localhost:3000/api-v1/search/status',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'token': `Bearer ${authenticated}`\r\n\r\n            },\r\n            data: data\r\n        };\r\n\r\n\r\n        axios(config)\r\n            .then(async function (response) {\r\n                // console.log(response.data.results);\r\n                setData(response.data.results)\r\n            })\r\n            .catch(function (error) {\r\n                alert(error);\r\n            });\r\n\r\n\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append(\"excel\", excelFile);\r\n        try {\r\n            const response = await axios({\r\n                method: \"post\",\r\n                url: \"http://localhost:3000/api-v1/todos/create-file-ex\",\r\n                data: formData,\r\n                headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            });\r\n\r\n            axios(response)\r\n                .then(function (response) {\r\n                    // console.log(JSON.stringify(response.data));\r\n                    window.location.reload()\r\n                })\r\n                .catch(function (error) {\r\n                    // alert(error);\r\n                    window.location.reload()\r\n\r\n                });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const handleFile = (event) => {\r\n        setExcelFile(event.target.files[0])\r\n    }\r\n\r\n    const handleDeleteAll = () => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'http://localhost:3000/api-v1/todos/delete-all',\r\n            headers: {\r\n                'token': `Bearer ${authenticated}`\r\n            }\r\n        };\r\n        axios(config)\r\n            .then(function (response) {\r\n                // console.log(JSON.stringify(response.data));\r\n                window.location.reload()\r\n            })\r\n            .catch(function (error) {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    if (authenticated === null || authenticated === undefined) {\r\n        return <Navigate replace to=\"/\" />;\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            width: \"100%\",\r\n                            height: \"48px\",\r\n                            background: \"#fff\",\r\n                            justifyContent: \"flex-end\",\r\n                            padding: \"16px\",\r\n                            alignItems: \"center\"\r\n                        }}\r\n                    >\r\n                        <Button variant=\"success\" onClick={() => { handlePostShow() }}><i className='fa fa-plu'></i>\r\n                            Thêm địa chỉ gmail\r\n                        </Button>\r\n                        <Button\r\n                            style={{ marginLeft: \"12px\" }}\r\n                            variant=\"error\" onClick={() => { handleDeleteAll() }}><i className='fa fa-plu'></i>\r\n                            Xóa tất cả bản ghi\r\n                        </Button>\r\n                    </div>\r\n                    <div\r\n                        className='mt-3 row'\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"68px\",\r\n                        }}>\r\n\r\n\r\n                        <div\r\n                            style={{\r\n                                width: \"30%\",\r\n                                height: \"48px\",\r\n                                position: \"absolute\",\r\n                                right: \"60%\",\r\n                                top: \"30px\"\r\n\r\n                            }}\r\n                            className='form'>\r\n                            <form autoComplete=\"off\"\r\n                                onSubmit={handleSubmit}>\r\n                                <label><h5>Tải file excle\r\n                                </h5></label>\r\n\r\n                                <div\r\n                                    style={{ alignItems: \"center\", }}\r\n                                    className='row'>\r\n                                    <input\r\n                                        style={{\r\n                                            width: \"50%\",\r\n                                            height: \"100%\"\r\n                                        }}\r\n                                        type='file' className='form-control'\r\n                                        onChange={handleFile} required></input>\r\n                                    {/* {excelFileError && <div className='text-danger'\r\n                                    style={{ marginTop: 5 + 'px' }}>{excelFileError}</div>} */}\r\n                                    <button\r\n\r\n                                        type='submit' className='btn btn-success'\r\n                                        style={{ width: \"20%\", height: \"100%\", marginLeft: \"10px\" }}>Xác nhận</button>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                        <div\r\n                            style={{\r\n                                width: \"15%\",\r\n                                height: \"48px\",\r\n                                position: \"absolute\",\r\n                                right: \"45%\",\r\n                            }}\r\n                            className='form-group'>\r\n                            <Form.Select\r\n                                value={valueStatus}\r\n                                onChange={e => {\r\n                                    handleSearchStatus(e)\r\n                                    // console.log(\"e.target.value\", e.target.value);\r\n                                }}\r\n                                aria-label=\"Default select example\">\r\n                                <option >Tìm theo trạng thái</option>\r\n                                <option value=\"1\">Pay</option>\r\n                                <option value=\"2\">Sai passWord</option>\r\n                                <option value=\"3\">2FA</option>\r\n                                <option value=\"4\">CVV</option>\r\n                                <option value=\"5\">Acc close</option>\r\n                                <option value=\"6\">Gỡ thẻ</option>\r\n                                <option value=\"7\">Không dủ pay</option>\r\n                                <option value=\"8\">Hết tiền</option>\r\n                                <option value=\"9\">Thẻ hết hạn</option>\r\n                            </Form.Select>\r\n                        </div>\r\n\r\n                        <div\r\n                            style={{\r\n                                width: \"20%\",\r\n                                height: \"48px\",\r\n                                position: \"absolute\",\r\n                                right: \"25%\",\r\n                            }}\r\n                            className='form-group'>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <input\r\n                                    style={{\r\n\r\n                                        height: \"38px\",\r\n                                    }}\r\n                                    required\r\n                                    type=\"text\" className='form-control'\r\n                                    onChange={(e) => setBangSearch(e.target.value)}\r\n                                    placeholder=\"Tìm kiếm theo bang...\" />\r\n                                <Button\r\n\r\n                                    onClick={() => { searchView() }}\r\n                                    variant=\"outline-secondary\" id=\"button-addon2\">\r\n                                    Tìm kiếm\r\n                                </Button>\r\n                            </InputGroup>\r\n                        </div>\r\n\r\n                        <div\r\n                            style={{\r\n                                width: \"20%\",\r\n                                height: \"48px\",\r\n                                position: \"absolute\",\r\n                                right: \"5%\",\r\n                            }}\r\n                            className='form-group'>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <input\r\n                                    style={{\r\n                                        height: \"38px\",\r\n                                    }}\r\n                                    required\r\n                                    type=\"text\" className='form-control'\r\n                                    onChange={(e) => setGmailSearch(e.target.value)}\r\n                                    placeholder=\"Tìm kiếm theo gmail...\" />\r\n                                <Button\r\n                                    onClick={() => { searchViewGmail() }}\r\n                                    variant=\"outline-secondary\" id=\"button-addon2\">\r\n                                    Tìm kiếm\r\n                                </Button>\r\n                            </InputGroup>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='table-responsive'>\r\n                        <table\r\n                            className='table table-striped table-hover table-bordered'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Bang</th>\r\n                                    <th>Zip</th>\r\n                                    <th>Gmail</th>\r\n                                    <th>Password</th>\r\n                                    <th>Info</th>\r\n                                    <th>Status</th>\r\n                                    <th>Note</th>\r\n                                    <th>Hành động</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentPosts.map((item, index) =>\r\n                                    <tr key={item._id}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{item.bang}</td>\r\n                                        <td>{item.zip}</td>\r\n                                        <td>{item.gmail}</td>\r\n                                        <td>{item.password}</td>\r\n                                        <td>{item.info}</td>\r\n                                        <td>{item.status === \"1\" ? \"Pay\"\r\n                                            : item.status === \"2\" ? \"Sai password\"\r\n                                                : item.status === \"3\" ? \"2FA\"\r\n                                                    : item.status === \"4\" ? \"CVV\"\r\n                                                        : item.status === \"5\" ? \"Acc close\"\r\n                                                            : item.status === \"6\" ? \"Gỡ thẻ\"\r\n                                                                : item.status === \"7\" ? \"Không đủ pay\"\r\n                                                                    : item.status === \"8\" ? \"Hết tiền\"\r\n                                                                        : item.status === \"9\" ? \"Thẻ hết hạn\" : \"Không xác định\"\r\n\r\n                                        }</td>\r\n                                        <td>{item.note}</td>\r\n\r\n                                        <td style={{ minWidth: 190 }}>\r\n                                            <Button\r\n                                                className='col-md-3'\r\n                                                size='sm' variant='primary' onClick={() => { handleViewShow(SetRowData(item)) }}>Chi tiết</Button>||\r\n                                            <Button\r\n                                                className='col-md-3'\r\n                                                size='sm' variant='warning' onClick={() => { handleEditShow(SetRowData(item), setId(item._id)) }}>Chỉnh sửa</Button> ||\r\n                                            <Button\r\n                                                className='col-md-2'\r\n                                                size='sm' variant='danger' onClick={() => { handleViewShow(SetRowData(item), setId(item._id), setDelete(true)) }}>Xóa</Button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <div\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                right: \"3%\",\r\n                                bottom: \"16px\",\r\n                            }}\r\n                        >\r\n                            <AdvancedPagination\r\n                                postsPerPage={postsPerPage}\r\n                                totalPosts={Data.length}\r\n                                paginate={paginate}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* View Modal */}\r\n                <div className='model-box-view'>\r\n                    <Modal\r\n                        show={ViewShow}\r\n                        onHide={hanldeViewClose}\r\n                        backdrop=\"static\"\r\n                        keyboard={false}\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Xem dữ liệu nhân viên</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>\r\n                                <div className='form-group'>\r\n                                    <label>BANG</label>\r\n                                    <input type=\"text\" className='form-control' value={RowData.bang} readOnly />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>ZIP</label>\r\n                                    <input type=\"email\" className='form-control' value={RowData.zip} readOnly />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>GMAIL</label>\r\n                                    <input type=\"text\" className='form-control' value={RowData.gmail} readOnly />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>PASSWORD</label>\r\n                                    <input type=\"text\" className='form-control' value={RowData.password} readOnly />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>INFO</label>\r\n                                    <input type=\"text\" className='form-control' value={RowData.info} readOnly />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>TRẠNG THÁI</label>\r\n                                    <input type=\"text\" className='form-control' value={\r\n                                        RowData.status === \"1\" ? \"Pay\"\r\n                                            : RowData.status === \"2\" ? \"Sai Password\"\r\n                                                : RowData.status === \"3\" ? \"2FA\"\r\n                                                    : RowData.status === \"4\" ? \"CVV\"\r\n                                                        : RowData.status === \"5\" ? \"Acc close\"\r\n                                                            : RowData.status === \"6\" ? \"Gỡ thẻ\"\r\n                                                                : RowData.status === \"7\" ? \"Không đủ Pay\"\r\n                                                                    : RowData.status === \"8\" ? \"Hết tiền\"\r\n                                                                        : RowData.status === \"9\" ? \"Thẻ hết hạn\" : \"Không xác định\"} readOnly />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>NOTE</label>\r\n                                    <input type=\"text\" className='form-control' value={RowData.note} readOnly />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <div\r\n                                className='row'\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"68px\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"flex-end\",\r\n                                }}>\r\n                                <div\r\n                                    style={{\r\n                                        width: \"45%\",\r\n                                        height: \"68px\",\r\n                                    }}>\r\n                                    {\r\n                                        Delete && (\r\n                                            <Button type='submit' className='btn btn-danger ' onClick={handleDelete}>Xóa bản ghi</Button>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        width: \"20%\",\r\n                                        height: \"68px\",\r\n                                    }}>\r\n                                    <Button variant='secondary' onClick={hanldeViewClose}>Đóng</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                {/* Modal for submit data to database */}\r\n                <div className='model-box-view'>\r\n                    <Modal\r\n                        show={ViewPost}\r\n                        onHide={hanldePostClose}\r\n                        backdrop=\"static\"\r\n                        keyboard={false}\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Thêm địa chỉ gmail</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>\r\n                                <div className='form-group'>\r\n                                    <label>BANG</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setBang(e.target.value)} placeholder=\"Vui lòng nhập bang\" />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>ZIP</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setZip(e.target.value)} placeholder=\"Vui lòng nhập mã zip\" />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>GMAIL</label>\r\n                                    <input type=\"email\" className='form-control' onChange={(e) => setGmail(e.target.value)} placeholder=\"Vui lòng nhập gmail\" />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>PASSWORD</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setPassword(e.target.value)} placeholder=\"Vui lòng nhập password\" />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>INFO</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setInfo(e.target.value)} placeholder=\"Vui lòng nhập địa chỉ\" />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>STATUS</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setStatus(e.target.value)} placeholder=\"Vui lòng nhập trạng thái\" />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>NOTE</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setNote(e.target.value)} placeholder=\"Vui lòng nhập ghi chú\" />\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <div\r\n                                className='row'\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"68px\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"flex-end\",\r\n                                }}>\r\n                                <div\r\n                                    style={{\r\n                                        width: \"35%\",\r\n                                        height: \"68px\",\r\n                                    }}\r\n                                >\r\n                                    <Button type='submit' className='btn btn-success ' onClick={handleSubmite}>Thêm địa chỉ</Button>\r\n\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        width: \"20%\",\r\n                                        height: \"68px\",\r\n                                    }}>\r\n                                    <Button variant='secondary' onClick={hanldePostClose}>Đóng</Button>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                {/* Modal for Edit employee record */}\r\n                <div className='model-box-view'>\r\n                    <Modal\r\n                        show={ViewEdit}\r\n                        onHide={hanldeEditClose}\r\n                        backdrop=\"static\"\r\n                        keyboard={false}\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Chỉnh sửa bản ghi</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div>\r\n                                <div className='form-group'>\r\n                                    <label>BANG</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setBang(e.target.value)} placeholder=\"Vui lòng nhập bang\" defaultValue={RowData.bang} />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>ZIP</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setZip(e.target.value)} placeholder=\"Vui lòng nhập mã zip\" defaultValue={RowData.zip} />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>GMAIL</label>\r\n                                    <input type=\"email\" className='form-control' onChange={(e) => setGmail(e.target.value)} placeholder=\"Vui lòng nhập gmail\" defaultValue={RowData.gmail} />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>PASSWORD</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setPassword(e.target.value)} placeholder=\"Vui lòng nhập password\" defaultValue={RowData.password} />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>INFO</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setInfo(e.target.value)} placeholder=\"Vui lòng nhập địa chỉ\" defaultValue={RowData.info} />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>STATUS</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setStatus(e.target.value)} placeholder=\"Vui lòng nhập trạng thái\" defaultValue={RowData.status} />\r\n                                </div>\r\n                                <div className='form-group mt-3'>\r\n                                    <label>NOTE</label>\r\n                                    <input type=\"text\" className='form-control' onChange={(e) => setNote(e.target.value)} placeholder=\"Vui lòng nhập ghi chú\" defaultValue={RowData.note} />\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <div\r\n                                className='row'\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    height: \"68px\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"flex-end\",\r\n                                }}>\r\n                                <div\r\n                                    style={{\r\n                                        width: \"45%\",\r\n                                        height: \"68px\",\r\n                                    }}\r\n                                >\r\n                                    <Button type='submit' className='btn btn-warning' onClick={handleEdit}>Chỉnh sửa bản ghi</Button>\r\n\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        width: \"20%\",\r\n                                        height: \"68px\",\r\n                                    }}>\r\n                                    <Button variant='secondary' onClick={hanldeEditClose}>Hủy</Button>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n};\r\n\r\nexport default Employee;","C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\Screen\\ScreenLogin.js",["46","47","48","49","50","51"],[],"import React, { useState } from 'react'\r\nimport \"../styles/Styles.css\"\r\nimport axios from 'axios'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nconst ScreenLogin = () => {\r\n    const navigate = useNavigate();\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [authenticated, setauthenticated] = useState(\r\n        localStorage.getItem(localStorage.getItem(\"authenticated\"))\r\n    );\r\n    const errors = {\r\n        uname: \"Sai email đăng nhập\",\r\n        pass: \"Sai password đăng nhập\"\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        var data = JSON.stringify({\r\n            \"email\": email,\r\n            \"password\": password\r\n        });\r\n\r\n        var config = {\r\n            method: 'post',\r\n            url: 'http://localhost:3000/api-v1/users/login',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: data\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                // console.log(JSON.stringify(response.data.result[0].accesstoken));\r\n                if (response.data.code === 200) {\r\n                    setIsSubmitted(true);\r\n                    const accesstoken = response.data.result[0].accesstoken\r\n                    // setauthenticated(accesstoken)\r\n                    localStorage.setItem(\"authenticated\", response.data.result[0].accesstoken);\r\n                    navigate(\"/todolist\");\r\n\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"Đã có lỗi xảy ra\")\r\n                setIsSubmitted(false);\r\n            });\r\n    }\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Tài khoản </label>\r\n                    <input type=\"text\" onChange={(e) => setEmail(e.target.value)} required />\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Mật khẩu </label>\r\n                    <input type=\"password\" name=\"pass\" onChange={(e) => setPassword(e.target.value)} required />\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"login-form\">\r\n                <div className=\"title\">Đăng nhập</div>\r\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScreenLogin","C:\\Users\\Huu Thang\\Desktop\\New folder\\EmployeePortal\\src\\components\\AdvancedPagination.js",["52"],[],"import React from 'react'\r\nimport Pagination from 'react-bootstrap/Pagination';\r\n\r\n\r\nconst AdvancedPagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className='page-item'>\r\n                        <a\r\n\r\n                            onClick={(event) => {\r\n                                event.preventDefault()\r\n                                paginate(number)\r\n                            }\r\n                            } href='!#' className='page-link'>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav >\r\n\r\n    )\r\n}\r\n\r\nexport default AdvancedPagination",{"ruleId":"53","severity":1,"message":"54","line":2,"column":25,"nodeType":"55","messageId":"56","endLine":2,"endColumn":35},{"ruleId":"53","severity":1,"message":"57","line":7,"column":13,"nodeType":"55","messageId":"56","endLine":7,"endColumn":17},{"ruleId":"53","severity":1,"message":"58","line":22,"column":12,"nodeType":"55","messageId":"56","endLine":22,"endColumn":22},{"ruleId":"53","severity":1,"message":"59","line":23,"column":11,"nodeType":"55","messageId":"56","endLine":23,"endColumn":27},{"ruleId":"53","severity":1,"message":"60","line":24,"column":11,"nodeType":"55","messageId":"56","endLine":24,"endColumn":28},{"ruleId":"53","severity":1,"message":"61","line":49,"column":12,"nodeType":"55","messageId":"56","endLine":49,"endColumn":26},{"ruleId":"53","severity":1,"message":"62","line":49,"column":28,"nodeType":"55","messageId":"56","endLine":49,"endColumn":45},{"ruleId":"53","severity":1,"message":"63","line":51,"column":26,"nodeType":"55","messageId":"56","endLine":51,"endColumn":41},{"ruleId":"53","severity":1,"message":"64","line":53,"column":12,"nodeType":"55","messageId":"56","endLine":53,"endColumn":21},{"ruleId":"53","severity":1,"message":"65","line":53,"column":23,"nodeType":"55","messageId":"56","endLine":53,"endColumn":35},{"ruleId":"66","severity":1,"message":"67","line":174,"column":8,"nodeType":"68","endLine":174,"endColumn":10,"suggestions":"69"},{"ruleId":"53","severity":1,"message":"70","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":14},{"ruleId":"53","severity":1,"message":"71","line":7,"column":27,"nodeType":"55","messageId":"56","endLine":7,"endColumn":43},{"ruleId":"53","severity":1,"message":"72","line":12,"column":12,"nodeType":"55","messageId":"56","endLine":12,"endColumn":25},{"ruleId":"53","severity":1,"message":"73","line":12,"column":27,"nodeType":"55","messageId":"56","endLine":12,"endColumn":43},{"ruleId":"53","severity":1,"message":"74","line":15,"column":11,"nodeType":"55","messageId":"56","endLine":15,"endColumn":17},{"ruleId":"53","severity":1,"message":"75","line":41,"column":27,"nodeType":"55","messageId":"56","endLine":41,"endColumn":38},{"ruleId":"53","severity":1,"message":"76","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":18},"no-unused-vars","'ModalTitle' is defined but never used.","Identifier","unusedVar","'XLSX' is defined but never used.","'ViewDelete' is assigned a value but never used.","'handleDeleteShow' is assigned a value but never used.","'hanldeDeleteClose' is assigned a value but never used.","'excelFileError' is assigned a value but never used.","'setExcelFileError' is assigned a value but never used.","'setPostsPerPage' is assigned a value but never used.","'excelData' is assigned a value but never used.","'setExcelData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetEmployeeData'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'Link' is defined but never used.","'setErrorMessages' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'setauthenticated' is assigned a value but never used.","'errors' is assigned a value but never used.","'accesstoken' is assigned a value but never used.","'Pagination' is defined but never used.",{"desc":"78","fix":"79"},"Update the dependencies array to be: [GetEmployeeData]",{"range":"80","text":"81"},[5953,5955],"[GetEmployeeData]"]